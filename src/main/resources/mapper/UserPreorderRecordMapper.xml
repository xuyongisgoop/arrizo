<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.arrizo.web.model.dao.UserPreorderRecordDao" >
  <resultMap id="BaseResultMap" type="com.arrizo.web.model.entity.UserPreorderRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="target_id" property="targetId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="items" property="items" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="pre_time" property="preTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, type, target_id, store_id, items, address, remark, pre_time, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_preorder_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_preorder_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.arrizo.web.model.entity.UserPreorderRecord" >
    insert into user_preorder_record (user_id, type, 
      target_id, store_id, items, 
      address, remark, pre_time, 
      create_time, update_time)
    values (#{userId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{targetId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{items,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{preTime,jdbcType=TIMESTAMP}, 
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.arrizo.web.model.entity.UserPreorderRecord" >
    insert into user_preorder_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="targetId != null" >
        target_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="items != null" >
        items,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="preTime != null" >
        pre_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="targetId != null" >
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="items != null" >
        #{items,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="preTime != null" >
        #{preTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.arrizo.web.model.entity.UserPreorderRecord" >
    update user_preorder_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="targetId != null" >
        target_id = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="items != null" >
        items = #{items,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="preTime != null" >
        pre_time = #{preTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.arrizo.web.model.entity.UserPreorderRecord" >
    update user_preorder_record
    set user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      target_id = #{targetId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      items = #{items,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      pre_time = #{preTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 根据类型和店铺id获取雇员预约记录列表 -->
  <select id="getPreEmployeeByStoreIdType" resultType="Map" parameterType="Map" >
    select 
    upr.target_id employee_id, ee.avatar, ee.employee_name, upr.pre_time, upr.items, upr.remark 
    from user_preorder_record upr left join employee ee on ee.id = upr.target_id 
    where upr.user_id = #{user_id} and upr.store_id = #{store_id} and upr.type = 1
  </select>
  <!-- 根据类型和店铺id获取产品预约记录列表 -->
  <select id="getPreProductByStoreIdType" resultType="Map" parameterType="Map" >
    select 
    upr.target_id product_id, pr.pic, pr.product_name, upr.pre_time, upr.items, upr.remark, upr.address 
    from user_preorder_record upr left join product pr on pr.id = upr.target_id 
    where upr.user_id = #{user_id} and upr.store_id = #{store_id} and upr.type = 2
  </select>
</mapper>